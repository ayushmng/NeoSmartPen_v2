// Generated by view binder compiler. Do not edit!
package kr.neolab.samplecode.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import kr.neolab.samplecode.R;

public final class FwUpdateDialogBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LinearLayout alertLayout;

  @NonNull
  public final TextView alertText;

  @NonNull
  public final Button btnDismiss;

  @NonNull
  public final Button btnDownload;

  @NonNull
  public final Button btnOk;

  @NonNull
  public final LinearLayout fwLoadingLayout;

  @NonNull
  public final TextView fwLoadingProgressText;

  @NonNull
  public final ProgressBar fwLoadingProgressbar;

  @NonNull
  public final TextView fwLoadingText;

  @NonNull
  public final LinearLayout fwVersionChkLayout;

  @NonNull
  public final LinearLayout fwVersionLayout;

  @NonNull
  public final TextView fwVersionLocalText;

  @NonNull
  public final TextView fwVersionServerText;

  private FwUpdateDialogBinding(@NonNull RelativeLayout rootView, @NonNull LinearLayout alertLayout,
      @NonNull TextView alertText, @NonNull Button btnDismiss, @NonNull Button btnDownload,
      @NonNull Button btnOk, @NonNull LinearLayout fwLoadingLayout,
      @NonNull TextView fwLoadingProgressText, @NonNull ProgressBar fwLoadingProgressbar,
      @NonNull TextView fwLoadingText, @NonNull LinearLayout fwVersionChkLayout,
      @NonNull LinearLayout fwVersionLayout, @NonNull TextView fwVersionLocalText,
      @NonNull TextView fwVersionServerText) {
    this.rootView = rootView;
    this.alertLayout = alertLayout;
    this.alertText = alertText;
    this.btnDismiss = btnDismiss;
    this.btnDownload = btnDownload;
    this.btnOk = btnOk;
    this.fwLoadingLayout = fwLoadingLayout;
    this.fwLoadingProgressText = fwLoadingProgressText;
    this.fwLoadingProgressbar = fwLoadingProgressbar;
    this.fwLoadingText = fwLoadingText;
    this.fwVersionChkLayout = fwVersionChkLayout;
    this.fwVersionLayout = fwVersionLayout;
    this.fwVersionLocalText = fwVersionLocalText;
    this.fwVersionServerText = fwVersionServerText;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FwUpdateDialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FwUpdateDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fw_update_dialog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FwUpdateDialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.alert_layout;
      LinearLayout alertLayout = rootView.findViewById(id);
      if (alertLayout == null) {
        break missingId;
      }

      id = R.id.alert_text;
      TextView alertText = rootView.findViewById(id);
      if (alertText == null) {
        break missingId;
      }

      id = R.id.btn_dismiss;
      Button btnDismiss = rootView.findViewById(id);
      if (btnDismiss == null) {
        break missingId;
      }

      id = R.id.btn_download;
      Button btnDownload = rootView.findViewById(id);
      if (btnDownload == null) {
        break missingId;
      }

      id = R.id.btn_ok;
      Button btnOk = rootView.findViewById(id);
      if (btnOk == null) {
        break missingId;
      }

      id = R.id.fw_loading_layout;
      LinearLayout fwLoadingLayout = rootView.findViewById(id);
      if (fwLoadingLayout == null) {
        break missingId;
      }

      id = R.id.fw_loading_progress_text;
      TextView fwLoadingProgressText = rootView.findViewById(id);
      if (fwLoadingProgressText == null) {
        break missingId;
      }

      id = R.id.fw_loading_progressbar;
      ProgressBar fwLoadingProgressbar = rootView.findViewById(id);
      if (fwLoadingProgressbar == null) {
        break missingId;
      }

      id = R.id.fw_loading_text;
      TextView fwLoadingText = rootView.findViewById(id);
      if (fwLoadingText == null) {
        break missingId;
      }

      id = R.id.fw_version_chk_layout;
      LinearLayout fwVersionChkLayout = rootView.findViewById(id);
      if (fwVersionChkLayout == null) {
        break missingId;
      }

      id = R.id.fw_version_layout;
      LinearLayout fwVersionLayout = rootView.findViewById(id);
      if (fwVersionLayout == null) {
        break missingId;
      }

      id = R.id.fw_version_local_text;
      TextView fwVersionLocalText = rootView.findViewById(id);
      if (fwVersionLocalText == null) {
        break missingId;
      }

      id = R.id.fw_version_server_text;
      TextView fwVersionServerText = rootView.findViewById(id);
      if (fwVersionServerText == null) {
        break missingId;
      }

      return new FwUpdateDialogBinding((RelativeLayout) rootView, alertLayout, alertText,
          btnDismiss, btnDownload, btnOk, fwLoadingLayout, fwLoadingProgressText,
          fwLoadingProgressbar, fwLoadingText, fwVersionChkLayout, fwVersionLayout,
          fwVersionLocalText, fwVersionServerText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
